<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Goldydocs on Muh Hijab Muallif</title><link>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/</link><description>Recent content in Goldydocs on Muh Hijab Muallif</description><generator>Hugo</generator><language>en</language><atom:link href="https://karapho712.github.io/muh-hijab-muallif-docsyy/en/index.xml" rel="self" type="application/rss+xml"/><item><title>How to find unique number in array</title><link>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/blog/2024/10/15/how-to-find-unique-number-in-array/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><guid>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/blog/2024/10/15/how-to-find-unique-number-in-array/</guid><description>TL:DR const numbers = [1, 2, 3, 4, 3, 2, 1]; const uniqueNumbers = numbers.filter((num, index, arr) =&amp;gt; { return arr.indexOf(num) === arr.lastIndexOf(num); }); console.log(uniqueNumbers); Or using an object-based approach const frequency = {}; numbers.forEach(num =&amp;gt; { frequency[num] = (frequency[num] || 0) + 1; }); const uniqueNumbers = Object.keys(frequency).filter(key =&amp;gt; frequency[key] === 1).map(Number); console.log(uniqueNumbers); Explenation 1 const numbers = [1, 2, 3, 4, 3, 2, 1]; const uniqueNumbers = numbers.filter((num, index, arr) =&amp;gt; { return arr.</description></item><item><title>Error mongodb WriteConflict</title><link>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/blog/2024/10/12/error-mongodb-writeconflict/</link><pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate><guid>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/blog/2024/10/12/error-mongodb-writeconflict/</guid><description>TL:DR
&amp;gt; Open the mongo shell (let&amp;#39;s call it shell 1) &amp;gt; session = db.getMongo().startSession(); &amp;gt; session.startTransaction(); &amp;gt; &amp;gt; sessionDb = session.getDatabase(&amp;#34;testing&amp;#34;); &amp;gt; sessionDb.test.insertOne({ field1: &amp;#34;value1&amp;#34;, field2: &amp;#34;value2&amp;#34; }); &amp;gt; session.commitTransaction(); &amp;gt; &amp;gt; After the data is inserted into the collection, open a new mongo shell (let&amp;#39;s call it shell 2). &amp;gt; In shell 1, perform a transaction to update the data that we inserted, but do not commit the transaction.</description></item><item><title>About Muh Hijab Muallif</title><link>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/about/</guid><description>About Muh Hijab Muallif Lorem ipsum dolor sit amet</description></item><item><title>Search Results</title><link>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://karapho712.github.io/muh-hijab-muallif-docsyy/en/search/</guid><description/></item></channel></rss>